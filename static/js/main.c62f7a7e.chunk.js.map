{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChangeYear","selected","value","onChange","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","currentExpense","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filterYear","setFilterYear","filteredExpenses","filter","toString","event","target","ExpenseForm","onSaveExpenseData","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showForm","setShowForm","onSubmit","preventDefault","expenseData","Number","Date","type","min","step","onClick","NewExpense","onAddExpense","enteredExpenseData","random","dummpyExpenses","App","setExpenses","previousExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c62f7a7e.chunk.js","sourcesContent":["import \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import \"./ExpensesFilter.css\";\r\nconst ExpensesFilter = ({ onChangeYear, selected }) => {\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selected} onChange={onChangeYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.currentExpense.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.currentExpense.title}</h2>\r\n          <div className=\"expense-item__price\">\r\n            {props.currentExpense.amount}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList = ({ expenses }) => {\r\n  if (!expenses.length)\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses found</h2>;\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {expenses.map((expense) => (\r\n        <ExpenseItem key={expense.id} currentExpense={expense} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport { useState } from \"react\";\r\nconst Expenses = ({ expenses }) => {\r\n  const [filterYear, setFilterYear] = useState(\"2020\");\r\n  const filteredExpenses = expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filterYear\r\n  );\r\n  const changeYearHandler = (event) => {\r\n    setFilterYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filterYear}\r\n          onChangeYear={changeYearHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList expenses={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\nconst ExpenseForm = ({ onSaveExpenseData }) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: Number(enteredAmount),\r\n      date: new Date(enteredDate),\r\n    };\r\n    onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setShowForm(false);\r\n  };\r\n  if (!showForm)\r\n    return (\r\n      <button type=\"button\" onClick={() => setShowForm(true)}>\r\n        Add New Expense\r\n      </button>\r\n    );\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\" onClick={() => setShowForm(false)}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = ({ onAddExpense }) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = { ...enteredExpenseData, id: Math.random().toString() };\r\n    onAddExpense(expenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst dummpyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(dummpyExpenses);\n  const addExpenseHandler = (expense) => {\n    setExpenses((previousExpenses) => [expense, ...previousExpenses]);\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}